plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'physicks'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// OAuth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- Validation ---
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Bean Validation API
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	// Hibernate Validator (Bean Validation 구현체)
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	// test 에서 slf4j 를 사용하기 위해 필요
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// JJWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// MapStruct : dto mapper
	implementation 'org.mapstruct:mapstruct:1.5.4.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'

	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

